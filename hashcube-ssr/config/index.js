import env from './env';

const config = env[process.env.NODE_ENV];

let shareLink = '';
if (process.env.NODE_ENV === 'production') {
  shareLink = 'https://m.hc.top/invite?inviteCode=';
} else {
  shareLink = 'https://xiaochongtestcubemm.hc.top/invite?inviteCode=';
}

const AppConfig = {
  debug: config.debug,       // debug模式
  appTag: 1, // 应用标识  1 - PC中文站 2 - PC英文站 3 - M站中文
  channel: 3, // 渠道标识 1 - 挖链APP 2 - 挖链网 3 - 算立方
  apiEndpoint: config.oldApiEndpoint,   // 接口请求地址
  apiEndpoint2: config.newApiEndpoint,   // 接口请求地址2
  apiEndpoint3: config.apiEndpointV1_1,
  shareLink: shareLink,
  apiTimeout: 20000, // 接口超时时间(单位:ms)
  baiduTrackerKey: 'f545ec2cc723bbfa08c1d408f2cab4c5',
  // productImgBaseUrl: '../../../static/images/products/',
  loginCheck: 'api/validLogin',
  // batchGoodsStatus: 'api/goods/isSoldOut',
  goodsDetail: 'api/goods/detail',
  // batchGoodsInfo: 'api/goods/showGoods',
  deliveryInfo: 'api/order/deliveryInfo',
  goodsBuyLimit: 'api/goods/ObtainIndividualGoodsCount',
  cartInfo: 'api/cart/byGoodsId',
  cartUpdate: 'api/cart/updateCount',
  cartList: 'api/cart/list',
  cartItemRemove: 'api/cart/delGoods',
  perOrder: 'api/getPrepareOrder',
  getAddressList: 'api/getAddressList',
  saveAddress: 'api/saveAddress',
  updateAddress: 'api/updateAddress',
  updateDefaultAddress: 'api/updateStatus',
  payQuery: 'api/ucf/query',
  pay: 'api/ucf/pay',
  payOffline: 'api/submitPayInfo',
  weChatPay: 'api/weChatPay',
  sendVerifyCode: 'api/smsLoginCodeSend',
  login: 'api/user/code/login',
  pwdLogin: 'api/user/login',
  newOrderList: 'api/newOrderList',
  cancelOrder: 'api/releaseOrder',
  submitOrder: 'api/submitOrder',
  allInviteeInfo: 'api/invite/getInviteRecordList',
  awardList: 'api/invite/getInviteCashBackList',
  rewardInviteeInfo: 'api/invite/getUserEntrustRewardList',
  inviteeInfo: 'api/invitationCode/invitePeopleStatus',
  balanceInfo: 'api/invitationCode/obtainBalanceAndRanking',
  rewardInfo: 'api/invitationCode/obtainRewardInfo',
  inviteCodeInfo: 'api/invitationCode/obtainCodeAndRanking',
  minerInfo: 'api/miner/minerInfo',
  userMoneyDetailList: 'api/user/userMoneyDetailList',
  userMoneyDetailByFlag: 'api/user/userMoneyDetailListByFlag',
  accountDetail: 'api/account/userAccountCurrencyDetail',
  accountDetailList: 'api/account/userAccountCurrencyDetailList',
  accountDetailByFlag: 'api/account/userAccountCurrencyDetailListByFlag',
  googleAuth: 'api/googleAuth',
  bindGoogleAuth: 'api/bindgoogleAuth',
  userInfo: 'api/userInfo',
  smsCode: 'api/user/smsCode',
  bindAccount: 'api/bindAccount',
  certify: 'api/certify',
  register: 'api/user/register',
  changePassword: 'api/user/password',
  userAccountCurrencyList: 'api/account/userAccountCurrencyList',
  verify: 'api/verify',
  addWallet: 'api/addWallet',
  walletAddressCheck: 'api/checkWallet',
  userMoneyTotal: 'api/user/userMoneyTotal',
  userAccountCurrencyInfo: 'api/account/userAccountCurrencyInfo',
  passwordByOld: 'api/user/passwordByOld',
  userAccountCoin: 'api/account/userAccountCoin',
  userWithdrawInfo: 'api/user/userWithdrawInfo',
  userRiskScore: 'api/user/userRiskScore',
  depositList: 'api/trust/tmList',
  depositDetail: 'api/trust/tmDetail',
  depositMachineList: 'api/trust/machineList',
  insertDelivery: 'api/order/insertDelivery',
  machineDetail: 'api/trust/machineDetail',
  machineRunningDetail: 'api/trust/machineDetail/runing',
  machineIncomeDetail: 'api/trust/machineDetail/income',
  colligate: 'api/trust/colligate',
  trustRank: 'api/trust/trust/rank',
  tmList: 'api/trust/tmList',
  currencyList: 'api/power/trust/getUserCurrencyList',
  deliveryList: 'api/trust/deliveryList',
  getOrderDetail: 'api/getOrder',
  uploadUrl: 'api/updatePic',
  getExpressInfo: 'api/order/getExpressInfo',
  bindCard: 'api/ucf/bank/bindCard',
  getBindCard: 'api/ucf/bank/getBindCrad',
  jyOrderList: 'api/jyOrder/list',
  smsOrderCodeSend: 'api/smsOrderCodeSend',
  powerOrderValidCode: 'api/validCode',
  jyOrderSubmit: 'api/jyOrder/submit',
  fristPreparePay: 'api/ucf/bank/frist/preparePay',
  queryCardBin: 'api/ucf/bank/queryCardBin',
  preparePay: 'api/ucf/bank/preparePay',
  bankPay: 'api/ucf/bank/pay',
  balancePay: 'api/machine/balance',
  bankSendSms: 'api/ucf/bank/sendSms',
  recharge: 'api/user/recharge',
  jyGoodsList: 'api/jyGoods/list',
  jyGoodsInfo: 'api/jyGoods/info',
  jyGoodsDetail: 'api/jyGoodsDetail/detail',
  updatePayWay: 'api/power/trust/payWay',
  orderFailReason: 'api/payFailReason',
  powerColligate: 'api/power/trust/colligate',
  powerIncomeList: 'api/power/trust/incomeList',
  powerDetail: 'api/power/trust/detail',
  powerDetailList: 'api/power/trust/detailList',
  powerInfo: 'api/power/trust/info',
  powerInfoList: 'api/power/trust/infoList',
  hashOrderSms: 'api/smsPowerOrderCodeSend',
  personalPowerLimit: 'api/jyOrder/surplus',
  getGoodsBatch: 'api/goods/getGoodsBatch',
  alipay: 'api/machine/alipay',
  rechargeAlipay: 'api/recharge/alipay',
  alipayResult: 'api/alipay/result',
  getCurrencyList: 'api/currency/getCurrencyList',
  getProductsList: 'api/goods/getGoodsList',
  getGoodsCategoryList: 'api/goods/getGoodsCategoryList',
  getGoodsAttributeList: 'api/goods/getGoodsAttributeList',
  getDiscountedPric: 'api/activity/getDiscountedPrice',
  getGoodsActivityList: 'api/activity/getGoodsActivityList',
  getRewardRuleList: 'api/activity/getRewardRuleList',
  getAllPoolStatus: 'api/otherPool/getAllPoolStatus',
  getBlockInfo: 'api/otherPool/getShareBlockInfo',
  searchWallet: 'api/otherPool/searchWallet',
  getCurrentWorker: 'api/otherPool/getCurrentWorker',
  getMinerInfo: 'api/otherPool/getMinerInfo',
  getPersonTransfer: 'api/otherPool/getPersonTransfer',
  getShareAllPoolStatus: 'api/otherPool/getShareAllPoolStatus',
  getShareStatusStatistics24: 'api/otherPool/getShareStatusStatistics24',
  getStatusStatistics24: 'api/otherPool/getStatusStatistics24',
  getGoodsInfo: 'api/goods/getGoodsInfo',
  getMinerDot24Hour: 'api/otherPool/getMinerDot24Hour',
  friendsLinks: 'api/link/getLinkConfigList',
  bannerList: 'api/home/getBannerList',
  notice: 'api/home/getNotice',
  recommendGoodsList: 'api/home/getRecommendGoodsList',
  recommendHashGoodsList: 'api/home/getRecommendJyGoodsList',
  video: 'api/home/getVideo',
  getArticleList: 'api/article/getArticleList',
  getArticleInfo: 'api/article/getArticleInfo',
  getArticleGoodsInfo: 'api/article/getGoodsInfo',
  statisticPV: 'api/channel/statisticPV',
  couponInfoList: 'api/coupon/couponInfoList',
  couponList: 'api/coupon/couponList',
  couponShiftList: 'api/coupon/couponShiftList',
  couponTransfer: 'api/coupon/userAccountCoin',
  couponOutList: 'api/coupon/couponOutList',
  getQrCode: 'api/qrCode/getQrCodeList',
  getActivityCouponInfo: 'api/activityCouponInfo/getActivityCouponInfo',
  getCoupon: 'api/activityCoupon/getCoupon',
  regex: {
    phone: /^1[345789]\d{9}$/,
    allPhone: /^\d{1,14}$/, //国际手机号,不带区号
    nationalPhone: /^\+(9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|2[98654321]\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\d{1,14}$/,
    code: /^\d{6}$/,
    password: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,18}$/,
    email: /^[A-Za-z\d]+([-_.][A-Za-z\d]+)*@([A-Za-z\d]+[-.])+[A-Za-z\d]{2,4}$/,
    idCard: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/,
    card: /^(\d{4}\s?){3}((\d{3})|(\d{4})|(\d{4}\s?\d{0,3}))$/,
    bank: /./
  },
  validateConfig: {
    locale: 'zh_CN',
    events: '',
    delay: 500,
    classes: true,
    dictionary: {
      'zh_CN': {
        custom: {
          name: {required: '姓名为必填项'},
          bankcard: {required: '请输入银行帐号', bankcard: '银行卡号为15-19位数字'},
          bank: {required: '开户行为必填项', bank: '开户行应包含"银行"'},
          phone: {required: '手机号不能为空', phone: '手机号格式不正确'},
          email: {required: '邮箱不能为空', email: '邮箱格式不正确'},
          code: {required: '验证码不能为空', code: '验证码格式不正确'},
          password: {required: '密码不能为空', password: '请输入8-18位字母与数字组合'},
          detail: {required: '请输入详细地址'},
          idCard: {required: '身份证不能为空', idCard: '身份证格式不正确'},
          repeatPassword: {required: '请确认你的密码', confirmed: '两次密码不一致'},
          address: {required: '地址不能为空'},
          remark: {required: '备注不能为空'},
          oldPassword: {required: '旧密码不能为空'},
          confirmPwd: {required: '请确认你的密码', is: '两次密码不一致'},
          num: {required: '请输入正确的数量', decimal: '无效的数字'},
          verifyCode: {required: '验证码不能为空', code: '验证码格式不正确'},
          receiver: {required: '请填写接收方的账号', account: '账户为手机或邮箱'}
        }
      }
    },
    validity: false
  },
  locales: [
    {
      lang: 'zh-cn',
      flag: require('../assets/images/common_cn.svg'),
      name: '简体中文',
      link: 'https://www.hc.top/',
      type: 1
    },
    {
      lang: 'en-us',
      flag: require('../assets/images/common_en.svg'),
      name: 'English',
      link: 'https://en.hc.top/',
      type: 2
    }
  ]
};

export default AppConfig;
